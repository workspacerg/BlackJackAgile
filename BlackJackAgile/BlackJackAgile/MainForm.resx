<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAARNSURBVDhPVZRtTNtVFMb/roVuvCzGOXyhoy2MtpTR
        N2pKC22g0EoLY5GIGy8OEEVwW0YGg4EB3xgMhyKOhU2yzCWabUEjGo2fNDL1wxaVaRY3WOISdMsi2WSb
        RmOwj8+p9cOa/HJ67zn3uff+zzlXSU9PX7UvUGy+smvn/KGywCDHySSJrCYJREVWiT1dVTX6R1v72TqH
        TcuxxKwhiURN7iGKMhYMuW8PDy1h9gwwPY03Cjwv0pFG1pFUIsKaDyLhQ5iZAT77HItdnQuPOa3OeMxa
        IsIxUaXPoDuw8szTMTGcOgUcnsBBt/tVOrOI/NZNB4MTOHYMOHkyFvd7bR26jcY++iTmYXIvkY1VSoPV
        NnpUUXBnyxbgraPA5CQw+hrGXK4TDLB9GAxOY3ycGx0GjhzBzdIyjDG+xGI5QL+bmMlDRG6jVkI+n73f
        aLo4KaLl5cDIMDC0H+jtxVwodAkDAxwPcn4Et8LhmFinw3HeZs17igJh8ggxEDlloiQlzV3gdg/lOxeO
        M/jPQADo3gt0dQI93UDnHtoe3PH5MEV/h902p9fr93BdG6khPpJN5HtqRHA9MedZrTU9OTkLH3HRSiQM
        PNcOtLYCO3bg79CjOM35ntycywa9Xiqhn3SQWuIndwneRzYSn8ti2b3o8aygoR5obgZamCwSbWrCT76i
        f+yWHPmur5OXyW4iJywgd11ZPqa2wGwqvZCf/z0qKhCtrQW2NyJaU4Pokw2IPl4DFBXhq9xN180GwxTj
        XyLPkgpiJ5LpFKIWwaQeryf/mtF0BRk6RK1WwO/HbQp8mboWt3x+IBgEvF7A6cQ3dvsNr9EkZdVESolk
        WT6b1KJKGQuFfFe12qvI2gi4XEAkguVIBc4kJeHdtPV/fZGcjN+qq3ni7TEfvB787HAsb3O55JTFxETk
        +/1Xh79kZc3DoAfynUBVFW7yemfVagx7PZezjcb3XvF4Fr9WqbDU2Ajs2smYzbEbzNsc1ykQIpvIg0Ra
        Vq3MZuhuLG/YEAtc3roVc6vXYLC4+JxWq51kwNu07/T5fRfPJWqwVN8AdHRgubAQn2g0v9JfTaS49USS
        olFO+Atn5lgS18rD+DElFXuDgU/pGCFvkom4HW8r9Mx+l5CAxYpKfKtOwITXc57zjaSMWIj0f5JiyTHr
        jkfKPr5kd6B/c+UMJ58n+8kQkYeil3SLbQ6VvH/BalsZLvL9kKHTvcC5VlJJJNPyS5EsawMlJf7elpaD
        hszMdo67yD7SSaQ06skTcdvaVlc3lZ2dPcD/4m8hIugg8qTFBKWx84gcfRuRIOlT6QKpM+kET9xGiMQ0
        x5GNpHQkMaKTLIL3E3mGXEScsqiciIDsLG0lnSBWria9K9mVhyFAZF0miZXO/53yABFR2UlErEQE5BoS
        KBkUKz9p01xii1sRk/WikyCCmvhATirHFhGxMpZ5KVh55sXKWISl7qTdJE7GMk+ddNW/KH/vVQ2buhcA
        AAAASUVORK5CYII=
</value>
  </data>
</root>